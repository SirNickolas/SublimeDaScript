<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE plist PUBLIC
  "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>scope</key>
  <string>
    (
      meta.group.dascript,
      meta.function.parameters.dascript,
      meta.parameters.dascript,
      meta.brackets.dascript,
      meta.block.dascript
    ) - (
      source.dascript comment.block,
      source.dascript string
    )
  </string>

  <key>settings</key>
  <dict>
    <key>increaseIndentPattern</key>
    <!--
      Ideally, this should have been done in the syntax by applying a scope to the first line
      of brackets' contents, but the following regex is a far easier solution.
    -->
    <string><![CDATA[(?mx)
      [^\(\[\{'"/]*+ # Prefix without special characters.
      (?! # Need at least one unclosed bracket.
        (?> # Balanced sequence with suffix.
          ( # Balanced sequence (recursion entry point).
            \(
            (?> [^\(\[\{'"/\)] | \g<1>)*+
            \)
          | \[ \[
            (?> [^\(\[\{'"/] | \g<1>)*?
            \] [ \t]*+ \] # If there is only one closing bracket, will backtrack into the loop.
          | \[ (?! \[) # A lone square bracket is a balanced sequence, indeed.
          | \{
            (?> [^\(\[\{'"/\}] | \g<1>)*+
            \}
          | ' (?> \\ [^']?+ | [^'])*+ '?+
          | " (?> \\ .?+ | [^\{"] | (?= \{) \g<1>)*+ "?+
          | / (?:
              \*
              (?> [^/] | \g<1>)*?
              (?: \*/ | \z) # If a star is not followed by a slash, will backtrack into the loop.
            | / .*+
            )?+
          )
          [^\(\[\{'"/]*+ # Suffix without special characters.
        )*+ # There can be several sequences.
        \z
      )
    ]]></string>
  </dict>
</dict>
</plist>
